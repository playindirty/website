name: Email Processing

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:  # Manual trigger
  repository_dispatch:  # API trigger

env:
  PYTHON_VERSION: '3.11'
  PG_PORT: 5432

jobs:
  process-emails:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y postgresql-client

      - name: Extract DB host and verify connection
        id: db-check
        run: |
          # Extract host from connection string
          DB_URL="${{ secrets.SUPABASE_DB_URL }}"
          DB_HOST=$(echo "$DB_URL" | awk -F'@' '{print $2}' | awk -F':' '{print $1}' | awk -F'/' '{print $1}')
          echo "Extracted DB host: $DB_HOST"
          
          # Test connection
          if pg_isready -h "$DB_HOST" -p $PG_PORT -t 10; then
            echo "DB connection successful"
            echo "DB_HOST=$DB_HOST" >> $GITHUB_ENV
          else
            echo "::error::Database connection failed"
            exit 1
          fi
        env:
          PG_PORT: ${{ env.PG_PORT }}

      - name: Run Email Processor
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}?sslmode=require
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        run: |
          set +e
          python send_scheduled_emails.py
          if [ $? -ne 0 ]; then
            echo "::warning::Email processing failed"
            exit 0
          fi
